---
- name: Set up a 3-node Kafka Cluster
  hosts: demo_nodes
  become: yes
  vars:
    kafka_version: "3.7.0"
    scala_version: "2.13"
    kafka_install_dir: "/opt/kafka"
    kafka_user: kafka
    kafka_group: kafka
    kafka_home: "/opt/kafka"
    zookeeper_port: 2181
    kafka_port: 9092
    broker_ids:
      ubuntu-node1-484400ba: 1
      ubuntu-node2-c338c56d: 2
      ubuntu-node3-3553f462: 3

  tasks:
    - name: Install Java
      apt:
        name: openjdk-11-jdk
        state: present
        update_cache: yes

    - name: Create Kafka user and group
      user:
        name: "{{ kafka_user }}"
        shell: /bin/bash
        create_home: yes

    - name: Download Kafka
      get_url:
        url: "https://downloads.apache.org/kafka/{{ kafka_version }}/kafka_{{ scala_version }}-{{ kafka_version }}.tgz"
        dest: /tmp/kafka.tgz

    - name: Extract Kafka
      unarchive:
        src: /tmp/kafka.tgz
        dest: /opt/
        remote_src: yes
        creates: "{{ kafka_install_dir }}"

    - name: Symlink Kafka
      file:
        src: "/opt/kafka_{{ scala_version }}-{{ kafka_version }}"
        dest: "{{ kafka_install_dir }}"
        state: link
        force: yes

    - name: Change ownership of Kafka directory
      file:
        path: "{{ kafka_install_dir }}"
        state: directory
        recurse: yes
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"

    - name: Configure Zookeeper
      copy:
        dest: "{{ kafka_install_dir }}/config/zookeeper.properties"
        content: |
          dataDir=/tmp/zookeeper
          clientPort={{ zookeeper_port }}
          maxClientCnxns=0
          tickTime=2000
          initLimit=5
          syncLimit=2
          server.1=172.17.0.4:2888:3888
          server.2=127.0.0.1:2264:2888:3888
          server.3=127.0.0.1:2265:2888:3888
      notify: restart zookeeper

    - name: Set myid for Zookeeper
      copy:
        dest: /tmp/zookeeper/myid
        content: "{{ broker_ids[inventory_hostname] }}"
      notify: restart zookeeper

    - name: Configure Kafka broker
      lineinfile:
        path: "{{ kafka_home }}/config/server.properties"
        regexp: "^broker.id="
        line: "broker.id={{ broker_ids[inventory_hostname] }}"

    - name: Additional Kafka config
      blockinfile:
        path: "{{ kafka_home }}/config/server.properties"
        block: |
          listeners=PLAINTEXT://{{ ansible_host }}:{{ kafka_port }}
          log.dirs=/tmp/kafka-logs
          zookeeper.connect=172.17.0.4:2181,127.0.0.1:2264,127.0.0.1:2265
          num.network.threads=3
          num.io.threads=8
          socket.send.buffer.bytes=102400
          socket.receive.buffer.bytes=102400
          socket.request.max.bytes=104857600
          num.partitions=1
          default.replication.factor=3
          offsets.topic.replication.factor=3
      notify: restart kafka

    - name: Create systemd unit for Zookeeper
      copy:
        dest: /etc/systemd/system/zookeeper.service
        content: |
          [Unit]
          Description=Apache Zookeeper
          After=network.target

          [Service]
          Type=simple
          ExecStart={{ kafka_home }}/bin/zookeeper-server-start.sh {{ kafka_home }}/config/zookeeper.properties
          User={{ kafka_user }}
          Restart=on-abnormal

          [Install]
          WantedBy=multi-user.target
      notify: restart zookeeper

    - name: Create systemd unit for Kafka
      copy:
        dest: /etc/systemd/system/kafka.service
        content: |
          [Unit]
          Description=Apache Kafka
          After=zookeeper.service

          [Service]
          Type=simple
          ExecStart={{ kafka_home }}/bin/kafka-server-start.sh {{ kafka_home }}/config/server.properties
          User={{ kafka_user }}
          Restart=on-abnormal

          [Install]
          WantedBy=multi-user.target
      notify: restart kafka

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - zookeeper
        - kafka

  handlers:
    - name: restart zookeeper
      systemd:
        name: zookeeper
        state: restarted
        daemon_reload: yes

    - name: restart kafka
      systemd:
        name: kafka
        state: restarted
        daemon_reload: yes
